<!DOCTYPE html>
<html>
<head>

  <!-- Include meta tag to ensure proper rendering and touch zooming -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <!-- Include jQuery Mobile stylesheets
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css">
  -->
  <!-- Include the jQuery library -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
  <!-- Include the jQuery Mobile library -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquerymobile/1.4.5/jquery.mobile.min.js"></script>
  <!-- Include the jQuery UI library -->
  <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
  <!-- Include interact.js for touch draggability -->
  <script src="//cdn.jsdelivr.net/interact.js/1.2.5/interact.min.js"></script>

  <title>PocketPals</title>

  <script>
    function hi() {
        if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
          if (window.innerHeight > window.innerWidth) {
            alert("Please use Landscape!");
            // Eventually, once they change the orientation, then load the controls
          }
        }
    }
    window.onload = hi;


    document.body.addEventListener('touchmove', function(event) {
        event.preventDefault();
    });


    // target elements with the "draggable" class
    interact('.draggable')
    .draggable({
        snap: {
            targets: [
            { x: 100, y: 200 },
            function (x, y) { return { x: x % 20, y: y}; }
            ],
            endOnly: true
        },
        // enable inertial throwing
        inertia: true,
        // keep the element within the area of it's parent
        restrict: {
            restriction: "parent",
            endOnly: false,
            elementRect: { top: .4, left: 0, bottom: .6, right: 1 }
        },

        // call this function on every dragmove event
        onmove: dragMoveListener,
        // call this function on every dragend event
        onend: function (event) {
            var textEl = event.target.querySelector('p');

            textEl && (textEl.textContent =
                    'moved a distance of '
                    + (Math.sqrt(event.dx * event.dx +
                            event.dy * event.dy)|0) + 'px');
        }
    });

    function dragMoveListener (event) {
        var target = event.target,
        // keep the dragged position in the data-x/data-y attributes
        x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
        y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

        // translate the element
        target.style.webkitTransform =
            target.style.transform =
            'translate(' + x + 'px, ' + y + 'px)';

        // update the posiion attributes
        target.setAttribute('data-x', x);
        target.setAttribute('data-y', y);
    }

    // this is used later in the resizing demo
    window.dragMoveListener = dragMoveListener;

    $(document).ready(function(){
        $("#stick").on("tap",function() {
            $("p").hide();
        })/*.on("taphold",function() {
            $(this).hide();
        });*/

        $("#innerBox").draggable({
            containment: "parent"
        });
    });

/*
    $(window).on("orientationchange", function(event) {
        $( "#stick" ).text( "This device is in " + event.orientation + " mode!" );
    }

    // Centering the joystick
    function center() { var inner = document.getElementById('innerBox');
        var outer = document.getElementById('containingBox');

        inner.style.backgroundColor = red;
        inner.style.marginTop = 50px;// outer.style.width/2 - inner.style.width/2;
    }
    */
            

/*
    // Drawing canvas
    function draw() {
      var canvas = document.getElementById('viewport');
      if (canvas.getContext) {
        var ctx = canvas.getContext('2d');

        ctx.fillStyle= "rgb(200,0,0)";
        ctx.fillRect (10,10,55,50);

        ctx.fillStyle = "rgba(0,0,200,0.5)";
        ctx.fillRect (30, 30, 55, 50);
      }
    }
*/
  </script>

  <link rel="stylesheet" href="/stylesheets/style.css" />
  
</head>
<body>
    <div id="displaywindow">
    <!--    <body onload="draw();">
          <canvas id="viewport" width="500" height="300"></canvas>
        </body>
    -->
    </div>

    <div id="mobile">
        <div id="verticalPhone">
            <p style=color: white;{}>alsdkfakl;sdf;hii</p>
        </div>

        <div id="controller">
            <div id="controller_backing">
                <button class="dpad" id="up"></button>
                <button class="dpad" id="right"></button>
                <button class="dpad" id="down"></button>
                <button class="dpad" id="left"></button>
      <!--      <div class="box" id="containingBox">
                <div class="circle" id="stickBounds">
                    <div class="box" id="innerBox">
                        <div class="circle" id="stick">
                        </div>
                    </div>
                    <div class="draggable" id="rect"></div>
                </div> 
                </div>-->
            </div>
        </div>
    </div>

    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    <script>
        var socket = io();
        var timer;
        $('#up').bind('touchstart click', function(){
            clearInterval(timer);
            timer = setInterval(function() {
                socket.emit('up');
            }, 100);
            return false;
        });
        $('#up').bind("touchend touchcancel", function(e){
            clearInterval(timer);
        });
        $('#right').bind('touchstart click', function(){
            socket.emit('right');
            return false;
        });
        $('#down').bind('touchstart click',function(){
            socket.emit('down');
            return false;
        });
        $('#left').bind('touchstart click',function(){
            socket.emit('left');
            return false;
        });

        socket.on('up', function() {
            $('#verticalPhone').append($('<li>').text("up pressed"));
        });
        socket.on('right', function() {
            $('#verticalPhone').append($('<li>').text("right pressed"));
        });
        socket.on('down', function() {
            $('#verticalPhone').append($('<li>').text("down pressed"));
        });
        socket.on('left', function() {
            $('#verticalPhone').append($('<li>').text("left pressed"));
        });
    </script>
</body>
</html>
